#!/usr/bin/env bash

SCRIPT_NAME=$1
HADOOP_HOME=<%= node['hops']['base_dir'] %>
PORT=$2
SECRET_DIR=$3
PROJECT_NAME=$4
PYTHONPATH=$5
HDFS_USER=$6
SERVING_NAME=$7
IMAGE=$8
LOGFILE=${SECRET_DIR}/${SCRIPT_NAME}-application.log
PID_FILE=${SECRET_DIR}/sklearn_flask_server.pid
CONTAINER_NAME=sk_model_server_${SERVING_NAME}_${PROJECT_NAME}

NOT_FOUND=127

help() {
    echo ""
    echo "usage: $0 SCRIPT_NAME PORT SECRET_DIR PROJECTNAME PYTHONPATH HDFS_USER SERVING_NAME IMAGE"
    echo ""
    exit 1
}

function kill_named {
    CID=$(docker container list -a | grep -i "$CONTAINER_NAME" | grep -v grep | awk '{print $1}')
    if [ "$CID" != "" ] ; then
	    docker rm -f "$CID" > /dev/null 2>&1
      res=$?
    else
      res=$NOT_FOUND
    fi
    return "$res"
}


if [ $# -ne 8 ]; then
  help
fi

if [ ! -d "$SECRET_DIR" ] ; then
    echo "Secret dir does not exist: $SECRET_DIR"
    exit 2
fi

LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HADOOP_HOME}/lib/native
HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop

cd "$SECRET_DIR" || exit

kill_named

if [ -f "$PID_FILE" ] ; then
    rm $PID_FILE
fi

docker run --rm -d --name $CONTAINER_NAME --cidfile=$PID_FILE \
       --network=host \
       --init \
       -e "HADOOP_HDFS_HOME=${HADOOP_HOME}" \
       -e "HADOOP_CONF_DIR=${HADOOP_CONF_DIR}" \
       -e "HADOOP_CLIENT_OPTS='-Dfs.permissions.umask-mode=0002'" \
       -e "HADOOP_HOME=${HADOOP_HOME}" \
       -e "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" \
       -e "HDFS_USER=$HDFS_USER" \
       -e "HADOOP_PROXY_USER=$HDFS_USER" \
       -e "MATERIAL_DIRECTORY=$SECRET_DIR" \
       -e "PATH=${HADOOP_HOME}/bin:$PATH" \
       -e "SCRIPT_NAME=$SCRIPT_NAME" \
       -e "PORT=$PORT" \
       -e "PROJECT_NAME=$PROJECT_NAME" \
       -e "PYTHONPATH=$PYTHONPATH" \
       -e "SERVING_NAME=$SERVING_NAME" \
       -e "SECRET_DIR=$SECRET_DIR" \
       -e "LOGFILE=$LOGFILE" \
       -e "MODEL_NAME=$SERVING_NAME" \
       -v $SECRET_DIR:$SECRET_DIR:rw \
       -v ${HADOOP_CONF_DIR}:${HADOOP_CONF_DIR}:ro \
       -u="yarnapp" \
       -w="$SECRET_DIR" \
       $IMAGE \
       /usr/local/bin/sklearn_serving-launcher.sh &

exit $?
