#!/usr/bin/env bash

#
# This script converts ipython notebooks to/from python programs
#

help() {
    echo ""
    echo "usage: $0 path hdfs_username jupyter_path output_path conversion_dir conversion_type docker_image cert_dir"
    echo ""
    exit 1
}

NOT_FOUND=127

function kill_named {
    CID=$(docker container list -a | grep $CONTAINER_NAME | grep -v grep | awk '{print $1}')
    if [ "$CID" != "" ] ; then
	docker rm -f "$CID" > /dev/null 2>&1
        res=$?
    else
	res=$NOT_FOUND
    fi
    return "$res"
}

if [ "$#" -ne 7 ] ; then
    help
fi

NOTEBOOK_PATH=$1
HDFS_USER=$2
CONDA_ENV=$3
OUTPUT_PATH=$4
CONVERSION_TYPE=$6
IMAGE=$7
CERT_DIR=$8

HADOOP_HOME=<%= node['hops']['base_dir'] %>
HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop

conversion_dir=$5
function finish {
    rm -rf "$conversion_dir"
}
trap finish EXIT

chown yarnapp "$conversion_dir"

if [ $? -ne 0 ] ; then
    echo "Could not chown directory in the staging directory for converting iPython notebook. Problem dir: $staging_dir as user yarnapp"
    exit 3
fi    

cd "$conversion_dir"

CONTAINER_NAME=$2__nbconverter__$(uuidgen)

kill_named

docker run --rm --name $CONTAINER_NAME\
       --network=host \
       --init \
       -e "HADOOP_HOME=${HADOOP_HOME}" \
       -e "HADOOP_USER_NAME=$2"\
       -e "HADOOP_HDFS_HOME=${HADOOP_HOME}" \
       -e "HADOOP_CONF_DIR=${HADOOP_CONF_DIR}" \
       -e "MATERIAL_DIRECTORY=${conversion_dir}"\
       -v $conversion_dir:$conversion_dir:rw\
       -v ${HADOOP_CONF_DIR}:${HADOOP_CONF_DIR}:ro \
       -u="yarnapp" \
       -w="$conversion_dir" \
       $IMAGE \
       notebook-converter.sh $NOTEBOOK_PATH $CONDA_ENV $OUTPUT_PATH $CONVERSION_TYPE
